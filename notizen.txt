index.html
^Textdatei

Elemente: <tag> content</tag>  Standalone Element: <tag>

Attribute: <tag att="wert">


BEST PRACTICE:
    Meta informationen: <meta charset="utf-8">
    Titel               <title>titel hier</title>
    innerhalb vom body ist der viewport
    im html tag lang="de" attribut


title = tooltip
lang = sprache
id = nur einmal für ein element
class = für mehrere, aber das wusstest du schon :eyes:


barierearmut = bei scr angaben immer auch ein alt attribut



Formulare <form>
1.nur form elemente
2.Beschriftungen!
3.eindeutigkeit
4.hilfe für den anwender (patterns, feldtypen,...)
5.erwartungen erfüllen


Gestaltung nur in der CSS-Datei!
style.css -> separates Verzeichnis
<link href="style.css" rel="stylesheet">

selektoren:
universalselektor:  *
typselektor:        img zum beispiel
    pseudoelemente: ::after
klasse:             .content
    pseudoklassen:  :hover
attributselektor:   [alt]
id:                 #first

<img src="bild,png" alt="Bild" class="content" id="first">

style attribut hat in der eigen geschriebenen html seite nichts zu suchen!


element anatomie
content
padding
border
margin


Block element 100% vom parent
umbruch

Inline element
tatsächlich benötigster
Raum
keine zuweisung von Größen möglich
nebeneinander wenn platz

ersetztes inline element
e.g. <img>
grüße zuweisen möglich

display:block|inline|inline-block

<p>bla</p>
bla: content




(nav>ul) nur direkten kinder

(nav ul) alle ul kinder


flexconteiner
display:flex, container spezifizieren

1.flex-direction: row|column
=> bestimmt die achsen
flex-wrap
2.flex-flow:row nowrap;
3.justify-content => alle items werden an ihrer achse zentriert
3.align-items: Ausrichtung nebenachse

(4. evtl.)align-content:(nur bei mehrzeiligen containern) ausrichtung nebenachse
        also wrap setzen!

properties im container gelten für alle Flexitems gleich

